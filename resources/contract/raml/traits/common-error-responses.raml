#%RAML 1.0 Trait
    description: Adds common error responses
    responses:
      400:
        description: |
          Bad Request:
          The request could not be understood by the server due to malformed syntax.
          The client SHOULD NOT repeat the request without modifications.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Bad request" }]
      401:
        description: |
          Unauthorized:
          The request requires user authentication.
          The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          The client MAY repeat the request with a suitable Authorization header field.
          If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials.
          If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once,
          then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Unauthorized" }]
      404:
        description: |
          Not Found:
          The server has not found anything matching the Request-URI.
          No indication is given of whether the condition is temporary or permanent.
          The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address.
          This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Resource not found" }]
      405:
        description: |
          Method Not Allowed:
          The method specified in the Request-Line is not allowed for the resource identified by the Request-URI.
          The response MUST include an Allow header containing a list of valid methods for the requested resource.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Method not allowed" }]
      406:
        description: |
          Not Acceptable:
          The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Not acceptable" }]
      409:
        description: |
          Conflict:
          The request could not be completed due to a conflict with the current state of the resource.
          This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request.
          The response body SHOULD include enough information for the user to recognize the source of the conflict.
          Ideally, the response entity would include enough information for the user or user agent to fix the problem;
          however, that might not be possible and is not required.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Internal mapping error" }]
      415:
        description: |
          Unsupported Media Type:
          The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Unsupported media type" }]
      500:
        description: |
          Internal Server Error:
          The server encountered an unexpected condition which prevented it from fulfilling the request.
        body:
          application/json:
            type: !include ../schemas-responses/error-response.schema.json
            example: [{ "message": "Internal processing error" }]